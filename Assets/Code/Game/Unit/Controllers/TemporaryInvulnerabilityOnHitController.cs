using ArenaShooter.Components;
using Zenject;

namespace ArenaShooter.Units.Enemies
{
    public class TemporaryInvulnerabilityOnHitController : IInitializable, ILateDisposable
    {
        private HealthComponent _healthComponent;
        private UnitTemporaryInvulnerableMechanic _unitTemporaryInvulnerability;

        public TemporaryInvulnerabilityOnHitController(HealthComponent healthComponent, UnitTemporaryInvulnerableMechanic unitTemporaryInvulnerability)
        {
            _healthComponent = healthComponent;
            _unitTemporaryInvulnerability = unitTemporaryInvulnerability;
        }

        public void Initialize()
        {
            _healthComponent.CurrentHealthChanged += TemporaryInvulnerability;
        }

        public void LateDispose()
        {
            _healthComponent.CurrentHealthChanged -= TemporaryInvulnerability;
        }

        private void TemporaryInvulnerability(float hp)
        {
            _unitTemporaryInvulnerability.SetInvulnerable();
        }
    }

}